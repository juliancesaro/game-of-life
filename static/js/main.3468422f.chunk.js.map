{"version":3,"sources":["components/navbar/NavBar.js","components/controls/Controls.js","components/cell/Cell.js","components/grid/Grid.js","components/about/Rules.js","App.js","index.js"],"names":["NavBar","className","left","distance","right","bottom","exact","activeClassName","to","GridTextInput","withStyles","root","color","padding","borderColor","TextField","muiTheme","createMuiTheme","overrides","MuiSlider","track","rail","mark","marked","markActive","backgroundColor","valuetext","value","Controls","toggleActive","gridActive","runningRef","animate","setGrid","emptyGrid","speedVal","handleSpeedChange","numRows","handleRowsChange","numCols","handleColsChange","Button","variant","onClick","current","style","margin","rows","i","push","Array","from","parseInt","Math","floor","random","ThemeProvider","theme","Slider","onChange","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","min","max","width","onSubmit","event","preventDefault","id","label","type","InputLabelProps","shrink","marginLeft","marginRight","Cell","row","col","isActive","activate","matches","useMediaQuery","height","Grid","grid","activateCell","produce","gridCopy","display","gridTemplateColumns","map","k","key","Rules","operations","App","useState","setSpeedVal","setNumRows","setNumCols","setGridActive","useRef","basename","path","g","numNeighbours","forEach","x","y","newI","newK","setTimeout","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3468422f.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./NavBar.css\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport Fade from \"react-reveal/Fade\"\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"title\">\r\n        <Fade left distance=\"20px\">\r\n          <h1 className=\"title-left\">John Conway's</h1>\r\n        </Fade>{\" \"}\r\n        <Fade right distance=\"20px\">\r\n          <h1 className=\"title-right\">Game of Life</h1>\r\n        </Fade>\r\n      </div>\r\n      <Fade bottom distance=\"20px\">\r\n        <div className=\"links\">\r\n          <NavLink exact className=\"link\" activeClassName=\"activelink\" to=\"/\">\r\n            Play\r\n          </NavLink>\r\n          <NavLink className=\"link\" activeClassName=\"activelink\" to=\"/rules\">\r\n            Rules\r\n          </NavLink>\r\n        </div>\r\n      </Fade>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from \"react\"\r\nimport \"./Controls.css\"\r\nimport {\r\n  withStyles,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Slider from \"@material-ui/core/Slider\"\r\n\r\nconst GridTextInput = withStyles({\r\n  root: {\r\n    \"& label\": {\r\n      color: \"white\",\r\n    },\r\n    \"& input\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiOutlinedInput-input\": {\r\n      padding: \"8px\",\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n    },\r\n  },\r\n})(TextField)\r\n\r\nconst muiTheme = createMuiTheme({\r\n  overrides: {\r\n    MuiSlider: {\r\n      track: {\r\n        color: \"white\",\r\n      },\r\n      rail: {\r\n        color: \"white\",\r\n      },\r\n      mark: {\r\n        color: \"black\",\r\n      },\r\n      marked: {\r\n        color: \"black\",\r\n      },\r\n      markActive: {\r\n        backgroundColor: \"black\",\r\n      },\r\n    },\r\n  },\r\n})\r\n\r\nfunction valuetext(value) {\r\n  return `${value}Â°C`\r\n}\r\n\r\nconst Controls = ({\r\n  toggleActive,\r\n  gridActive,\r\n  runningRef,\r\n  animate,\r\n  setGrid,\r\n  emptyGrid,\r\n  speedVal,\r\n  handleSpeedChange,\r\n  numRows,\r\n  handleRowsChange,\r\n  numCols,\r\n  handleColsChange,\r\n}) => {\r\n  const formSubmit = (event) => {\r\n    event.preventDefault()\r\n    setGrid(emptyGrid)\r\n  }\r\n  return (\r\n    <div className=\"controls\">\r\n      <div className=\"animation-buttons\">\r\n        <Button\r\n          className=\"button\"\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            toggleActive()\r\n            if (!gridActive) {\r\n              runningRef.current = true\r\n              animate()\r\n            }\r\n          }}\r\n          style={{ margin: 5 }}\r\n        >\r\n          {gridActive ? \"Stop\" : \"Start\"}\r\n        </Button>\r\n        <Button\r\n          className=\"button\"\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            const rows = []\r\n            for (let i = 0; i < numRows; i++) {\r\n              rows.push(\r\n                Array.from(Array(parseInt(numCols)), () =>\r\n                  Math.floor(Math.random() * 2)\r\n                )\r\n              )\r\n            }\r\n            setGrid(rows)\r\n          }}\r\n          style={{ margin: 5 }}\r\n        >\r\n          random\r\n        </Button>\r\n        <Button\r\n          className=\"button\"\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            setGrid(emptyGrid)\r\n          }}\r\n          style={{ margin: 5 }}\r\n        >\r\n          reset\r\n        </Button>\r\n      </div>\r\n      <div className=\"input-fields\">\r\n        <div className=\"speed-input\">\r\n          <p>Speed</p>\r\n          <ThemeProvider theme={muiTheme}>\r\n            <Slider\r\n              className=\"slider\"\r\n              value={speedVal}\r\n              onChange={handleSpeedChange}\r\n              getAriaValueText={valuetext}\r\n              aria-labelledby=\"discrete-slider\"\r\n              valueLabelDisplay=\"auto\"\r\n              step={50}\r\n              marks\r\n              min={50}\r\n              max={250}\r\n              style={{ width: 200, margin: 10 }}\r\n            />\r\n          </ThemeProvider>\r\n        </div>\r\n        <div className=\"size-input\">\r\n          <p>Size</p>\r\n          <form onSubmit={formSubmit}>\r\n            <GridTextInput\r\n              id=\"outlined-number\"\r\n              label=\"Rows\"\r\n              type=\"number\"\r\n              value={numRows}\r\n              onChange={handleRowsChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              variant=\"outlined\"\r\n              style={{\r\n                width: 80,\r\n                color: \"white\",\r\n                marginLeft: 10,\r\n                marginRight: 10,\r\n              }}\r\n            />\r\n            <GridTextInput\r\n              id=\"outlined-number\"\r\n              label=\"Columns\"\r\n              type=\"number\"\r\n              value={numCols}\r\n              onChange={handleColsChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              variant=\"outlined\"\r\n              style={{ width: 80, color: \"white\", marginRight: 10 }}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"button\"\r\n              variant=\"contained\"\r\n              style={{ width: 80, marginRight: 10 }}\r\n            >\r\n              update\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Controls\r\n","import React from \"react\"\r\nimport \"./Cell.css\"\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\r\n\r\nconst Cell = ({ row, col, numRows, numCols, isActive, activate }) => {\r\n  const matches = useMediaQuery(\"(max-width:600px)\")\r\n\r\n  return (\r\n    <div\r\n      className={`cell ${isActive ? \"on\" : \"off\"}`}\r\n      onClick={() => activate(row, col)}\r\n      style={\r\n        matches\r\n          ? {\r\n              height: `calc(${100 / numCols}vw - 1px)`,\r\n            }\r\n          : { height: 14, width: 14 }\r\n      }\r\n    ></div>\r\n  )\r\n}\r\n\r\nexport default Cell\r\n","import React from \"react\"\r\nimport \"./Grid.css\"\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\r\nimport produce from \"immer\"\r\nimport Cell from \"../cell/Cell\"\r\n\r\nconst Grid = ({ grid, setGrid, numRows, numCols, isActive }) => {\r\n  const matches = useMediaQuery(\"(max-width:600px)\")\r\n\r\n  const activateCell = (row, col) => {\r\n    setGrid(\r\n      produce(grid, (gridCopy) => {\r\n        gridCopy[row][col] = !gridCopy[row][col]\r\n      })\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"grid-wrapper\">\r\n      <div\r\n        className=\"grid\"\r\n        style={\r\n          matches\r\n            ? {\r\n                width: \"100%\",\r\n                display: \"grid\",\r\n                margin: \"0px 20px\",\r\n                gridTemplateColumns: `repeat(${numCols},  calc(${\r\n                  100 / numCols\r\n                }%))`,\r\n              }\r\n            : {\r\n                display: \"grid\",\r\n                gridTemplateColumns: `repeat(${numCols},  calc(${\r\n                  100 / numCols\r\n                }%))`,\r\n              }\r\n        }\r\n      >\r\n        {grid.map((rows, i) =>\r\n          rows.map((col, k) => (\r\n            <Cell\r\n              key={`${i}-${k}`}\r\n              row={i}\r\n              col={k}\r\n              numRows={numRows}\r\n              numCols={numCols}\r\n              isActive={grid[i][k]}\r\n              activate={activateCell}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","import React from \"react\"\r\nimport \"./Rules.css\"\r\n\r\nconst Rules = () => {\r\n  return (\r\n    <div className=\"rules\">\r\n      <p>\r\n        John Conway's Game of Life is a zero-player game in which cells are\r\n        either alive or dead. Each generation of cells evolves from it's\r\n        previous generation, and each cell's life is determined by a set of\r\n        rules.\r\n      </p>\r\n      <p>The rules are:</p>\r\n      <ul>\r\n        <li>\r\n          A live cell with less than two live neighbours will be dead in the\r\n          next generation.\r\n        </li>\r\n        <li>\r\n          A live cell with more than three live neighbours will be dead in the\r\n          next generation.\r\n        </li>\r\n        <li>\r\n          A live cell with two or three live neighbours will be alive in the\r\n          next generation.\r\n        </li>\r\n        <li>\r\n          A dead cell with three live neighbours will be alive in the next\r\n          generation.\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rules\r\n","import React, { useState, useRef } from \"react\"\r\nimport \"./App.css\"\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\"\r\nimport produce from \"immer\"\r\nimport NavBar from \"./components/navbar/NavBar\"\r\nimport Controls from \"./components/controls/Controls\"\r\nimport Grid from \"./components/grid/Grid\"\r\nimport Rules from \"./components/about/Rules\"\r\nimport Fade from \"react-reveal/Fade\"\r\n\r\nconst operations = [\r\n  [0, 1],\r\n  [0, -1],\r\n  [1, -1],\r\n  [-1, 1],\r\n  [1, 1],\r\n  [-1, -1],\r\n  [1, 0],\r\n  [-1, 0],\r\n]\r\n\r\nconst App = () => {\r\n  const [speedVal, setSpeedVal] = useState(150)\r\n  const [numRows, setNumRows] = useState(20)\r\n  const [numCols, setNumCols] = useState(20)\r\n  const [gridActive, setGridActive] = useState(false)\r\n\r\n  const emptyGrid = () => {\r\n    const rows = []\r\n    for (let i = 0; i < numRows; i++) {\r\n      rows.push(Array.from(Array(parseInt(numCols)), () => 0))\r\n    }\r\n    return rows\r\n  }\r\n\r\n  const [grid, setGrid] = useState(() => {\r\n    return emptyGrid()\r\n  })\r\n\r\n  const toggleActive = () => {\r\n    setGridActive(!gridActive)\r\n  }\r\n\r\n  const runningRef = useRef(gridActive)\r\n  runningRef.current = gridActive\r\n\r\n  const animate = () => {\r\n    if (!runningRef.current) {\r\n      return\r\n    }\r\n    setGrid((g) => {\r\n      return produce(g, (gridCopy) => {\r\n        for (let i = 0; i < numRows; i++) {\r\n          for (let k = 0; k < numCols; k++) {\r\n            let numNeighbours = 0\r\n\r\n            operations.forEach(([x, y]) => {\r\n              const newI = i + x\r\n              const newK = k + y\r\n              if (newI >= 0 && newI < numRows && newK >= 0 && newK < numCols) {\r\n                numNeighbours += g[newI][newK]\r\n              }\r\n            })\r\n            if (numNeighbours < 2 || numNeighbours > 3) {\r\n              gridCopy[i][k] = 0\r\n            } else if (g[i][k] === 0 && numNeighbours === 3) {\r\n              gridCopy[i][k] = 1\r\n            }\r\n          }\r\n        }\r\n      })\r\n    })\r\n    setTimeout(animate, speedVal)\r\n  }\r\n\r\n  const handleSpeedChange = (event, value) => {\r\n    setSpeedVal(value)\r\n  }\r\n\r\n  const handleRowsChange = (event) => {\r\n    setNumRows(event.target.value)\r\n  }\r\n\r\n  const handleColsChange = (event) => {\r\n    setNumCols(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter basename=\"/\">\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/rules\">\r\n            <Fade bottom distance=\"20px\">\r\n              <Rules />\r\n            </Fade>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Fade bottom distance=\"20px\">\r\n              <Controls\r\n                toggleActive={toggleActive}\r\n                gridActive={gridActive}\r\n                runningRef={runningRef}\r\n                animate={animate}\r\n                setGrid={setGrid}\r\n                emptyGrid={emptyGrid}\r\n                speedVal={speedVal}\r\n                handleSpeedChange={handleSpeedChange}\r\n                numRows={numRows}\r\n                handleRowsChange={handleRowsChange}\r\n                numCols={numCols}\r\n                handleColsChange={handleColsChange}\r\n              />\r\n              <Grid\r\n                grid={grid}\r\n                setGrid={setGrid}\r\n                numRows={numRows}\r\n                numCols={numCols}\r\n                isActive={gridActive}\r\n              />\r\n            </Fade>\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}