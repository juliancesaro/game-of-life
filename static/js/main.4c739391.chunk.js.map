{"version":3,"sources":["components/navbar/NavBar.js","components/controls/Controls.js","components/cell/Cell.js","components/grid/Grid.js","App.js","index.js"],"names":["NavBar","className","GridTextInput","withStyles","root","color","padding","borderColor","TextField","muiTheme","createMuiTheme","overrides","MuiSlider","track","rail","mark","marked","markActive","backgroundColor","valuetext","value","Controls","toggleActive","gridActive","runningRef","animate","setGrid","emptyGrid","speedVal","handleSpeedChange","numRows","handleRowsChange","numCols","handleColsChange","Button","variant","onClick","current","style","margin","rows","i","push","Array","from","parseInt","Math","floor","random","ThemeProvider","theme","Slider","onChange","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","min","max","width","onSubmit","event","preventDefault","id","label","type","InputLabelProps","shrink","marginLeft","marginRight","Cell","row","col","isActive","activate","Grid","grid","activateCell","produce","gridCopy","display","gridTemplateColumns","map","k","key","operations","App","useState","setSpeedVal","setNumRows","setNumCols","setGridActive","useRef","g","numNeighbours","forEach","x","y","newI","newK","setTimeout","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c739391.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./NavBar.css\"\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1 className=\"title\">John Conway's Game of Life</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from \"react\"\r\nimport \"./Controls.css\"\r\nimport {\r\n  withStyles,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Slider from \"@material-ui/core/Slider\"\r\n\r\nconst GridTextInput = withStyles({\r\n  root: {\r\n    \"& label\": {\r\n      color: \"white\",\r\n    },\r\n    \"& input\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiOutlinedInput-input\": {\r\n      padding: \"8px\",\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n    },\r\n  },\r\n})(TextField)\r\n\r\nconst muiTheme = createMuiTheme({\r\n  overrides: {\r\n    MuiSlider: {\r\n      track: {\r\n        color: \"white\",\r\n      },\r\n      rail: {\r\n        color: \"white\",\r\n      },\r\n      mark: {\r\n        color: \"black\",\r\n      },\r\n      marked: {\r\n        color: \"black\",\r\n      },\r\n      markActive: {\r\n        backgroundColor: \"black\",\r\n      },\r\n    },\r\n  },\r\n})\r\n\r\nfunction valuetext(value) {\r\n  return `${value}Â°C`\r\n}\r\n\r\nconst Controls = ({\r\n  toggleActive,\r\n  gridActive,\r\n  runningRef,\r\n  animate,\r\n  setGrid,\r\n  emptyGrid,\r\n  speedVal,\r\n  handleSpeedChange,\r\n  numRows,\r\n  handleRowsChange,\r\n  numCols,\r\n  handleColsChange,\r\n}) => {\r\n  const formSubmit = (event) => {\r\n    event.preventDefault()\r\n    setGrid(emptyGrid)\r\n  }\r\n  return (\r\n    <div className=\"controls\">\r\n      <div className=\"animation-buttons\">\r\n        <Button\r\n          className=\"button\"\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            toggleActive()\r\n            if (!gridActive) {\r\n              runningRef.current = true\r\n              animate()\r\n            }\r\n          }}\r\n          style={{ margin: 5 }}\r\n        >\r\n          {gridActive ? \"Stop\" : \"Start\"}\r\n        </Button>\r\n        <Button\r\n          className=\"button\"\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            const rows = []\r\n            for (let i = 0; i < numRows; i++) {\r\n              rows.push(\r\n                Array.from(Array(parseInt(numCols)), () =>\r\n                  Math.floor(Math.random() * 2)\r\n                )\r\n              )\r\n            }\r\n            setGrid(rows)\r\n          }}\r\n          style={{ margin: 5 }}\r\n        >\r\n          random\r\n        </Button>\r\n        <Button\r\n          className=\"button\"\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            setGrid(emptyGrid)\r\n          }}\r\n          style={{ margin: 5 }}\r\n        >\r\n          reset\r\n        </Button>\r\n      </div>\r\n      <div className=\"input-fields\">\r\n        <div className=\"speed-input\">\r\n          <p>Speed</p>\r\n          <ThemeProvider theme={muiTheme}>\r\n            <Slider\r\n              className=\"slider\"\r\n              value={speedVal}\r\n              onChange={handleSpeedChange}\r\n              getAriaValueText={valuetext}\r\n              aria-labelledby=\"discrete-slider\"\r\n              valueLabelDisplay=\"auto\"\r\n              step={50}\r\n              marks\r\n              min={50}\r\n              max={250}\r\n              style={{ width: 200, margin: 10 }}\r\n            />\r\n          </ThemeProvider>\r\n        </div>\r\n        <div className=\"size-input\">\r\n          <p>Size</p>\r\n          <form onSubmit={formSubmit}>\r\n            <GridTextInput\r\n              id=\"outlined-number\"\r\n              label=\"Rows\"\r\n              type=\"number\"\r\n              value={numRows}\r\n              onChange={handleRowsChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              variant=\"outlined\"\r\n              style={{\r\n                width: 100,\r\n                color: \"white\",\r\n                marginLeft: 10,\r\n                marginRight: 10,\r\n              }}\r\n            />\r\n            <GridTextInput\r\n              id=\"outlined-number\"\r\n              label=\"Columns\"\r\n              type=\"number\"\r\n              value={numCols}\r\n              onChange={handleColsChange}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              variant=\"outlined\"\r\n              style={{ width: 100, color: \"white\", marginRight: 10 }}\r\n            />\r\n            <Button type=\"submit\" className=\"button\" variant=\"contained\">\r\n              update\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Controls\r\n","import React from \"react\"\r\nimport \"./Cell.css\"\r\n\r\nconst Cell = ({ row, col, isActive, activate }) => {\r\n  return (\r\n    <div\r\n      className={`cell ${isActive ? \"on\" : \"off\"}`}\r\n      onClick={() => activate(row, col)}\r\n    ></div>\r\n  )\r\n}\r\n\r\nexport default Cell\r\n","import React from \"react\"\r\nimport \"./Grid.css\"\r\nimport produce from \"immer\"\r\nimport Cell from \"../cell/Cell\"\r\n\r\nconst Grid = ({ grid, setGrid, numRows, numCols, isActive }) => {\r\n  const activateCell = (row, col) => {\r\n    setGrid(\r\n      produce(grid, (gridCopy) => {\r\n        gridCopy[row][col] = !gridCopy[row][col]\r\n      })\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"grid-wrapper\">\r\n      <div\r\n        className=\"grid\"\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: `repeat(${numCols},  20px)`,\r\n        }}\r\n      >\r\n        {grid.map((rows, i) =>\r\n          rows.map((col, k) => (\r\n            <Cell\r\n              key={`${i}-${k}`}\r\n              row={i}\r\n              col={k}\r\n              isActive={grid[i][k]}\r\n              activate={activateCell}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","import React, { useState, useRef } from \"react\"\r\nimport \"./App.css\"\r\nimport produce from \"immer\"\r\nimport NavBar from \"./components/navbar/NavBar\"\r\nimport Controls from \"./components/controls/Controls\"\r\nimport Grid from \"./components/grid/Grid\"\r\n\r\nconst operations = [\r\n  [0, 1],\r\n  [0, -1],\r\n  [1, -1],\r\n  [-1, 1],\r\n  [1, 1],\r\n  [-1, -1],\r\n  [1, 0],\r\n  [-1, 0],\r\n]\r\n\r\nconst App = () => {\r\n  const [speedVal, setSpeedVal] = useState(150)\r\n  const [numRows, setNumRows] = useState(20)\r\n  const [numCols, setNumCols] = useState(20)\r\n  const [gridActive, setGridActive] = useState(false)\r\n\r\n  const emptyGrid = () => {\r\n    const rows = []\r\n    for (let i = 0; i < numRows; i++) {\r\n      rows.push(Array.from(Array(parseInt(numCols)), () => 0))\r\n    }\r\n    return rows\r\n  }\r\n\r\n  const [grid, setGrid] = useState(() => {\r\n    return emptyGrid()\r\n  })\r\n\r\n  const toggleActive = () => {\r\n    setGridActive(!gridActive)\r\n  }\r\n\r\n  const runningRef = useRef(gridActive)\r\n  runningRef.current = gridActive\r\n\r\n  const animate = () => {\r\n    if (!runningRef.current) {\r\n      return\r\n    }\r\n    setGrid((g) => {\r\n      return produce(g, (gridCopy) => {\r\n        for (let i = 0; i < numRows; i++) {\r\n          for (let k = 0; k < numCols; k++) {\r\n            let numNeighbours = 0\r\n\r\n            operations.forEach(([x, y]) => {\r\n              const newI = i + x\r\n              const newK = k + y\r\n              if (newI >= 0 && newI < numRows && newK >= 0 && newK < numCols) {\r\n                numNeighbours += g[newI][newK]\r\n              }\r\n            })\r\n            if (numNeighbours < 2 || numNeighbours > 3) {\r\n              gridCopy[i][k] = 0\r\n            } else if (g[i][k] === 0 && numNeighbours === 3) {\r\n              gridCopy[i][k] = 1\r\n            }\r\n          }\r\n        }\r\n      })\r\n    })\r\n    setTimeout(animate, speedVal)\r\n  }\r\n\r\n  const handleSpeedChange = (event, value) => {\r\n    setSpeedVal(value)\r\n  }\r\n\r\n  const handleRowsChange = (event) => {\r\n    setNumRows(event.target.value)\r\n  }\r\n\r\n  const handleColsChange = (event) => {\r\n    setNumCols(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar />\r\n      <Controls\r\n        toggleActive={toggleActive}\r\n        gridActive={gridActive}\r\n        runningRef={runningRef}\r\n        animate={animate}\r\n        setGrid={setGrid}\r\n        emptyGrid={emptyGrid}\r\n        speedVal={speedVal}\r\n        handleSpeedChange={handleSpeedChange}\r\n        numRows={numRows}\r\n        handleRowsChange={handleRowsChange}\r\n        numCols={numCols}\r\n        handleColsChange={handleColsChange}\r\n      />\r\n      <Grid\r\n        grid={grid}\r\n        setGrid={setGrid}\r\n        numRows={numRows}\r\n        numCols={numCols}\r\n        isActive={gridActive}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}